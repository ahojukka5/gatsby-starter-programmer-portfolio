{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","htmlAttributes","titleTemplate","name","content","property","author"],"mappings":"2FAAA,0DAYA,SAASA,EAAI,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EAASC,YAD8B,iBAezCC,EAAkBN,GAAeI,eAAvC,YAEA,OACE,uBACEG,eAAgB,CACdN,QAEFE,MAJF,EAKEK,cAAa,QAAUJ,eALzB,MAMEF,KAAM,CACJ,CACEO,KADF,cAEEC,QAASJ,GAEX,CACEK,SADF,WAEED,QAASP,GAEX,CACEQ,SADF,iBAEED,QAASJ,GAEX,CACEK,SADF,UAEED,QAAQ,WAEV,CACED,KADF,eAEEC,QAAQ,WAEV,CACED,KADF,kBAEEC,QAASN,eAAkBQ,QAE7B,CACEH,KADF,gBAEEC,QAASP,GAEX,CACEM,KADF,sBAEEC,QAASJ,IA/BP,YAsCZP,eAAmB,CACjBE,KADiB,KAEjBC,KAFiB,GAGjBF,YAAY,IAUd,O,kCCvFA,4CAWA,UARqB,kBACnB,6BACE,uBAAKG,MAAM,mBACX,4BAFF,aAGE,2BAJiB","file":"component---src-pages-404-js-734530a7cd2db94af725.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <div>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </div>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}